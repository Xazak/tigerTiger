# variables
NAME=tigerGame

INCDIR=include
# currently must define objects explicitly for pattern replacement
# _DEPS=$(INCDIR)/%.hpp
DEPS=$(patsubst %,$(INCDIR)/%,$(_DEPS))
SRCDIR=src
# currently must define objects explicitly for pattern replacement
# _SRCS=$(SRCDIR)/%.cpp
_SRCS=main.cpp
SRCS=$(patsubst %,$(SRCDIR)/%,$(_SRCS))
OBJDIR=obj
# currently must define objects explicitly for pattern replacement
# _OBJS=$(OBJDIR)/%.o
_OBJS= main.o
OBJS=$(patsubst %,$(OBJDIR)/%,$(_OBJS))

LIBS=-ltcod -ltcodgui

# flags
CXXFLAGS=-Wall -g -I$(INCDIR)
LDFLAGS=$(LIBS)

# rules
# COMPILE NEW OBJECTS
# all .o files: depend on all src files and headers;
# 	if out of date, compile new ones: only generate objects, use associated names, use regular flags
$(OBJDIR)/%.o:	%.c $(DEPS)
	$(CXX) -c -o $(OBJDIR)/$@ $< $(CXXFLAGS)

# COMPILE THE GAME BINARY
# game: depend on all objects
# 	if out of date, compile by using existing objects and libraries
tigerGame:	$(OBJS)
	$(CXX) -o $@ $^ $(CXXFLAGS) $(LDFLAGS) 

# use .PHONY for all make tasks that do not involve actual files (ie command scripts)
.PHONY: clean
clean:		#cleans up working dir by removing all object files
	rm -f $(OBJDIR)/*.o
